#
# Linux Wazuh agent install and self-register, plus install osquery
#
# Usage:
#
# WAZ_VER="3.12.3" OSQ_VER="4.3.0" WAZ_MGR="WAZUH_MANAGER_NAME_OR_IP" WAZ_REG_MGR="OPTIONAL WAZUH_REGISTRATION_MANAGER_NAME_OR_IP" WAZ_PWD="REGISTRATION_PASSWORD" WAZ_GRPS="osquery" WAZ_AGENT_NAME="OPTIONAL_CUSTOM_AGENT_NAME"
#

# Bail if this box is running Security Onion
if [ -f /etc/nsm/securityonion.conf ]; then
        echo "This deployment script is not compatible with Security Onion.  Do a manual tarball install and registration instead."
        exit
fi

# If no custom agent name specificed, use the internal hostname.
if [ "$WAZ_AGENT_NAME" == "" ]; then
        WAZ_AGENT_NAME=`hostname`
fi

if [ "$WAZ_REG_MGR" == "" ]; then
        WAZ_REG_MGR="$WAZUH_MGR"
fi

cd ~

# Take note if agent is already connected to a Wazuh manager and collect relevant data
if [[ `cat /var/ossec/var/run/ossec-agentd.state 2> /dev/null | grep "'connected'"` ]]; then
        ALREADY_CONNECTED="yes"
        OLDNAME=`cut -d" " -f2 /var/ossec/etc/client.keys 2> /dev/null`
        CURR_GROUPS=`echo \`grep "<\!-- Source file: " /var/ossec/etc/shared/merged.mg | cut -d" " -f4 | cut -d/ -f1 \` | sed 's/ /,/g'`
        rm -f /tmp/client.keys 2> /dev/null
        cp -p /var/ossec/etc/client.keys /tmp/
fi

# Shut down and clean out any previous Wazuh or OSSEC agent or manager
systemctl stop wazuh-agent 2> /dev/null
systemctl stop ossec-hids-agent 2> /dev/null
systemctl stop ossec-agent 2> /dev/null
service wazuh-agent stop 2> /dev/null
service ossec-hids-agent stop 2> /dev/null
service stop ossec-agent stop 2> /dev/null
yum -y erase wazuh-agent 2> /dev/null
yum -y erase ossec-hids-agent 2> /dev/null
yum -y erase ossec-agent 2> /dev/null
apt-get -y purge wazuh-agent 2> /dev/null
apt-get -y purge ossec-hids-agent 2> /dev/null
apt-get -y purge ossec-agent 2> /dev/null
kill -kill `ps auxw | grep "/var/ossec/bin" | grep -v grep | awk '{print $2}'` 2> /dev/null
rm -rf /var/ossec /etc/ossec-init.conf 2> /dev/null

# Dynamically generate a Wazuh config profile name for the major and minor version of a given Linux distro, like ubuntu14, ubuntu 14.04.
# No plain distro name like "ubuntu" alone is included because we use agent groups at that level, not config profiles.
CFG_PROFILE=`. /etc/os-release; echo $ID\`echo $VERSION_ID | cut -d. -f1\`, $ID\`echo $VERSION_ID\``

#
# Branch between Ubuntu and CentOS for Wazuh agent installation steps
#
if [[ -f /etc/os-release && `grep -i ubuntu /etc/os-release` ]]; then
        # Wazuh Agent remove/download/install
        rm -f /tmp/wazuh-agent_$WAZ_VER-1_amd64.deb 2> /dev/null
        wget -O /tmp/wazuh-agent_$WAZ_VER-1_amd64.deb https://packages.wazuh.com/3.x/apt/pool/main/w/wazuh-agent/wazuh-agent_$WAZ_VER-1_amd64.deb
        # Using dpkg because it seems ubuntu 14 refuses to install local deb file via apt-get.  Otherwise apt-get install would work for newer Ubuntu.
        dpkg -i /tmp/wazuh-agent_$WAZ_VER-1_amd64.deb
        rm -f /tmp/wazuh-agent_$WAZ_VER-1_amd64.deb
        WAZ_GRPS="linux,ubuntu,$WAZ_GRPS"
else
        # Wazuh Agent remove/download/install
        rm -f /tmp/wazuh-agent-$WAZ_VER-1.x86_64.rpm 2> /dev/null
        wget -O /tmp/wazuh-agent-$WAZ_VER-1.x86_64.rpm https://packages.wazuh.com/3.x/yum/wazuh-agent-$WAZ_VER-1.x86_64.rpm
        yum -y install /tmp/wazuh-agent-$WAZ_VER-1.x86_64.rpm
        rm -f /tmp/wazuh-agent-$WAZ_VER-1.x86_64.rpm
        WAZ_GRPS="linux,centos,$WAZ_GRPS"
fi

#
# If we can safely skip self registration and just restore the backed up client.keys file, then do so. Otherwise, self-register.
# This should keep us from burning through so many agent ID numbers.
#
SKIP_REG="no"
if [ "$ALREADY_CONNECTED" == "yes" ]; then
        echo "Agent is presently connected..."
        echo "Current registered agent name is $OLDNAME and new target name is: $WAZ_AGENT_NAME"
        if [ "$WAZ_AGENT_NAME" == "$OLDNAME" ]; then
                echo "Old and new agent registration names match."
                if [ "$CURR_GROUPS" == "$WAZ_GRPS" ]; then
                        echo -e "Old and new agent group memberships match.\nWill skip self-registration and just restore client.keys backup instead..."
                        SKIP_REG=1
                else
                        echo "Current groups: $CURR_GROUPS and target groups: $WAZ_GRPS do not match."
                fi
        fi
fi
if [ "$SKIP_REG" == "no" ]; then
        /var/ossec/bin/agent-auth -m $WAZ_REG_MGR -P "$WAZ_PWD" -G "$WAZ_GRPS" -A $WAZ_AGENT_NAME
else
        cp -p /tmp/client.keys /var/ossec/etc/
fi

#
# Osquery remove/download/install (different for ubuntu vs centos)
#
if [[ -f /etc/os-release && `grep -i ubuntu /etc/os-release` ]]; then
        dpkg --purge osquery 2> /dev/null
        rm -rf /var/osquery/osquery.db /var/osquery /var/log/osquery
        rm -f osquery.deb 2> /dev/null
        wget -O osquery.deb https://pkg.osquery.io/deb/osquery_${OSQ_VER}_1.linux.amd64.deb
        dpkg -i osquery.deb
        rm -f osquery.deb 2> /dev/null
else
        yum -y erase osquery 2> /dev/null
        rm -rf /var/osquery/osquery.db /var/osquery /var/log/osquery
        rm -f osquery.rpm 2> /dev/null
        wget -O osquery.rpm https://pkg.osquery.io/rpm/osquery-${OSQ_VER}-1.linux.x86_64.rpm
        yum -y install osquery.rpm
        rm -f osquery.rpm 2> /dev/null
fi

#
# Dynamically generate ossec.conf
#
echo "
<ossec_config>
  <client>
    <server>
      <address>$WAZ_MGR</address>
      <port>1514</port>
      <protocol>tcp</protocol>
    </server>
    <config-profile>$CFG_PROFILE</config-profile>
    <notify_time>30</notify_time>
    <time-reconnect>180</time-reconnect>
    <auto_restart>yes</auto_restart>
    <crypto_method>aes</crypto_method>
  </client>
  <active-response>
    <disabled>no</disabled>
  </active-response>
  <logging>
    <log_format>json</log_format>
  </logging>  
</ossec_config>
" > /var/ossec/etc/ossec.conf

#
# Dynamically genrate local_internal_options.conf
#
echo "
# Logcollector - If it should accept remote commands from the manager
logcollector.remote_commands=1

# Wazuh Command Module - If it should accept remote commands from the manager
wazuh_command.remote_commands=1

# Enable it to accept execute commands from SCA policies pushed from the manager in the shared configuration
# Local policies ignore this option
sca.remote_commands=1
" > /var/ossec/etc/local_internal_options.conf

# Restart the Wazuh agent (and Osquery subagent)
if [[ `which systemctl 2> /dev/null` ]]; then
        systemctl restart wazuh-agent
else
        service wazuh-agent restart
fi

echo "Waiting 15 seconds before checking connection status to manager..."
sleep 15
if [[ `cat /var/ossec/logs/ossec.log | grep "Connected to the server "` ]]; then
        echo "Agent has succesfully reported into the manager."
else
        echo "Something appears to have gone wrong.  Agent is not connected to the manager."
fi
